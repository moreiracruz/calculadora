name: Preparar a Release

on:
  push:
    tags:
      - 'v*' # Dispara o workflow ao criar uma tag no formato "vX.X.X"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Prepare Release
        id: prepare_release
        run: |
          # Extrai a versão da tag (ex: v1.0.5 -> 1.0.5)
          RELEASE_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Release Version: $RELEASE_VERSION"

          # Atualiza o pom.xml para a versão de release (remove SNAPSHOT)
          mvn versions:set -DnewVersion=$RELEASE_VERSION

          # Faz o commit da versão de release
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pom.xml
          git commit -m "Preparando release $RELEASE_VERSION"
          git push origin main

      - name: Deploy Release
        run: mvn deploy -s .github/settings.xml

      - name: Prepare Next Development Version
        run: |
          # Incrementa a versão para a próxima SNAPSHOT (ex: 1.0.5 -> 1.0.6-SNAPSHOT)
          NEXT_VERSION=$(echo ${GITHUB_REF#refs/tags/v} | awk -F. '{print $1"."$2"."$3+1"-SNAPSHOT"}')
          echo "Next Development Version: $NEXT_VERSION"

          # Atualiza o pom.xml para a próxima versão de desenvolvimento
          mvn versions:set -DnewVersion=$NEXT_VERSION

          # Faz o commit da próxima versão de desenvolvimento
          git add pom.xml
          git commit -m "Preparando próxima versão de desenvolvimento $NEXT_VERSION"
          git push origin main

      - name: Deploy Next Development Version
        run: mvn deploy -s .github/settings.xml